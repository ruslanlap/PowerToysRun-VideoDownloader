name: Build and Release VideoDownloader Plugin

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Needed for creating releases
  issues: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-options: '--depth=1'  # Shallow clone for faster checkout

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true  # Enable caching for .NET dependencies
          cache-dependency-path: '**/packages.lock.json'  # Cache based on lock file if available

      - name: Get version
        id: get_version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "IS_TAG=true" >> $GITHUB_OUTPUT

      - name: Update plugin.json version
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $pluginJsonPath = "VideoDownloader/Community.PowerToys.Run.Plugin.VideoDownloader/plugin.json"
          if (Test-Path $pluginJsonPath) {
            $content = Get-Content $pluginJsonPath -Raw | ConvertFrom-Json
            $content.Version = $version
            $content | ConvertTo-Json -Depth 10 | Set-Content $pluginJsonPath -Encoding UTF8
            Write-Host "Updated plugin.json version to: $version"
          }

      - name: Restore dependencies
        run: dotnet restore VideoDownloader/VideoDownloader.sln -p:Platform="${{ matrix.platform }}"
        shell: pwsh

      - name: Build
        run: dotnet build VideoDownloader/VideoDownloader.sln -c Release -p:Platform="${{ matrix.platform }}" --no-restore
        shell: pwsh

      - name: Create artifact directory and copy files
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $platform = "${{ matrix.platform }}"
          $artifactDir = "artifacts/VideoDownloader-$version-$platform"
          $buildOutput = "VideoDownloader/Community.PowerToys.Run.Plugin.VideoDownloader/bin/$platform/Release"
          
          # Create artifact directory structure
          New-Item -ItemType Directory -Force -Path "$artifactDir/VideoDownloader" | Out-Null
          
          # Copy Images folder
          $imagesSrc = "VideoDownloader/Community.PowerToys.Run.Plugin.VideoDownloader/Images"
          $imagesDst = "$artifactDir/VideoDownloader/Images"
          if (Test-Path $imagesSrc) {
            Copy-Item -Path $imagesSrc -Destination $imagesDst -Recurse -Force
            Write-Host "Copied Images folder to $imagesDst"
          }
          
          # Locate and copy build output
          if (-not (Test-Path $buildOutput)) {
            Write-Error "Build output not found at $buildOutput"
            exit 1
          }
          
          Get-ChildItem -Path $buildOutput -File | ForEach-Object {
            Copy-Item -Path $_.FullName -Destination "$artifactDir/VideoDownloader" -Force
          }
          
          # Remove unnecessary PowerToys DLLs
          @(
            "PowerToys.Common.UI.dll",
            "PowerToys.ManagedCommon.dll",
            "PowerToys.Settings.UI.Lib.dll",
            "Wox.Infrastructure.dll",
            "Wox.Plugin.dll"
          ) | ForEach-Object {
            $dllPath = "$artifactDir/VideoDownloader/$_"
            if (Test-Path $dllPath) {
              Remove-Item $dllPath -Force
              Write-Host "Removed $_"
            }
          }

      - name: Create ZIP archive
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $platform = "${{ matrix.platform }}"
          $artifactDir = "artifacts/VideoDownloader-$version-$platform"
          Compress-Archive -Path "$artifactDir/VideoDownloader" -DestinationPath "artifacts/VideoDownloader-$version-$platform.zip" -Force

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}
          path: artifacts/*.zip
          retention-days: 1  # Keep artifacts for 1 day to reduce storage usage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-options: '--depth=1'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Prepare artifacts for release
        run: |
          mkdir -p release-artifacts
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          cp downloaded-artifacts/build-artifacts-x64/VideoDownloader-${VERSION}-x64.zip release-artifacts/
          cp downloaded-artifacts/build-artifacts-arm64/VideoDownloader-${VERSION}-arm64.zip release-artifacts/VideoDownloader-${VERSION}-ARM64.zip

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          cat > release_notes.md << 'EOF'
          # üì• VideoDownloader v${VERSION}
          <p align="center">
            <img src="https://github.com/ruslanlap/PowerToysRun-VideoDownloader/blob/master/assets/logo.png" width="128px" alt="VideoDownloader Logo" />
          </p>
          <p align="center">
            A powerful plugin for PowerToys Run to download videos from various platforms with ease.
          </p>
          ## ‚ú® What's New
          - üöÄ Performance improvements: Faster download speeds and reduced memory usage.
          - üêõ Bug fixes: Fixed issues with certain video platforms and improved error handling.
          - ‚ú® New features: Added support for more video formats and platforms.
          - üîß PTRUN Compliance: All PowerToys Run linting issues resolved (PTRUN1301, PTRUN1303, PTRUN1401, PTRUN1402).
          ## üì• Installation
          ### Prerequisites
          - PowerToys installed on your system.
          - .NET runtime (if applicable).
          ### Steps
          1. Download the ZIP file for your platform (x64 or ARM64).
          2. Extract the contents to `%LOCALAPPDATA%\Microsoft\PowerToys\PowerToys Run\Plugins\`.
          3. Restart PowerToys.
          4. Start using with `Alt+Space` then type `dl <URL>`.
          ### Troubleshooting
          - If the plugin does not appear, ensure that the files are extracted to the correct directory.
          - Make sure PowerToys is up to date.
          ## üîç Quick Commands
          | Command                     | Description                         |
          |-----------------------------|-------------------------------------|
          | `dl <URL>`                  | Download a video in the best quality |
          | `dl --audio <URL>`          | Download audio only                  |
          | `dl --quality <quality> <URL>` | Download with specific quality      |
          | `dl --list-formats <URL>`   | Show available formats               |
          | `dl --help`                 | Display help information             |
          ## üôè Thank You
          Thank you for using VideoDownloader! Your feedback and contributions are greatly appreciated.
          If you encounter any issues or have suggestions, please [open an issue](https://github.com/ruslanlap/PowerToysRun-VideoDownloader/issues).
          Made with ‚ù§Ô∏è by <a href="https://github.com/ruslanlap">ruslanlap</a>
          Special thanks to all contributors and the PowerToys community for their support.
          EOF
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate SHA256 checksums
        run: |
          cd release-artifacts
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          sha256sum VideoDownloader-${VERSION}-x64.zip > VideoDownloader-${VERSION}-x64.zip.sha256
          sha256sum VideoDownloader-${VERSION}-ARM64.zip > VideoDownloader-${VERSION}-ARM64.zip.sha256
          {
            echo "SHA256 Checksums for VideoDownloader Plugin v${VERSION}"
            echo "Generated on: $(date -u)"
            echo ""
            cat VideoDownloader-${VERSION}-x64.zip.sha256
            cat VideoDownloader-${VERSION}-ARM64.zip.sha256
          } > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: VideoDownloader v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
          files: |
            release-artifacts/VideoDownloader-${{ steps.get_version.outputs.VERSION }}-x64.zip
            release-artifacts/VideoDownloader-${{ steps.get_version.outputs.VERSION }}-ARM64.zip
            release-artifacts/VideoDownloader-${{ steps.get_version.outputs.VERSION }}-x64.zip.sha256
            release-artifacts/VideoDownloader-${{ steps.get_version.outputs.VERSION }}-ARM64.zip.sha256
            release-artifacts/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}